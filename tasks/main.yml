---
# Role for installing nginx server.
#
# For enabling server blocks use include parameter.
#   Options:
#      - include: default_site.yml enables default "catch all" server block
#      - include: site_dev.yml enables server block for project
#   Includes should go at the bottom of the role

- name: Pretask add nginx key
  apt_key: data="{{ lookup('file', 'nginx_signing.key') }}" state=present

- name: Add nginx repo
  apt_repository: repo='deb http://nginx.org/packages/debian/ wheezy nginx'
    state=present

- name: Install the nginx packages
  apt: name=nginx state=present update_cache=yes

- name: Nginx conf setup
  template: src=nginx.conf.j2 dest=/etc/nginx/nginx.conf owner=root
      group=root mode=644
  notify: restart nginx

- name: Remove default content from conf.d
  file: path=/etc/nginx/conf.d/default.conf state=absent
  notify: restart nginx

- name: Remove default content from conf.d
  file: path=/etc/nginx/conf.d/example_ssl.conf state=absent
  notify: restart nginx

- name: create nginx sites-available
  file: name=/etc/nginx/sites-available state=directory

- name: create nginx sites-enabled
  file: name=/etc/nginx/sites-enabled state=directory

- name: create ssl directory
  file: name=/etc/nginx/ssl state=directory

- name: add default site template
  template: src=default.conf.j2 dest=/etc/nginx/sites-available/{{ site_name }}.conf
  notify: restart nginx

- name: enable default site
  file: src=/etc/nginx/sites-available/{{ site_name }}.conf
    dest=/etc/nginx/sites-enabled/{{ site_name }}.conf state=link
  notify: restart nginx

- name: generate certificate for dev site
  command: openssl req -new -nodes -x509 -subj "/C=US/ST=Oregon/L=Portland/O=IT/CN=''" -days 3650 -keyout /etc/nginx/ssl/"{{ site_name }}".key -out /etc/nginx/ssl/"{{ site_name }}".crt -extensions v3_ca creates=/etc/nginx/ssl/{{ site_name }}.crt
  when: enable_ssl is defined and enable_ssl == True
